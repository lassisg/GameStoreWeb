@page "/"
@inject GamesClient GamesClient
@attribute [StreamRendering]

<PageTitle>Game Store</PageTitle>

<div class="mt-2">
    <a class="btn btn-primary" role="button" href="/editgame">New Game</a>
</div>

@if (games is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped table-bordered table-hover mt-3">
        <thead class="table-dark">
            <th class="text-center">Id</th>
            <th class="text-center">Name</th>
            <th class="text-center">Genre</th>
            <th class="text-center">Price</th>
            <th class="text-center">Release Date</th>
        <th class="text-center"></th>
        </thead>
        <tbody>
        @foreach(var game in games)
        {
            <tr>
                <td class="text-center">@game.Id</td>
                <td>@game.Name</td>
                <td>@game.Genre</td>
                <td class="text-end">@game.Price.ToString("C2")</td>
                <td class="text-center">@game.ReleaseDate</td>
                <td class="text-center">
                    <div class="d-flex">
                        <a class="btn btn-primary me-2" role="button" href="@GameUrl(game.Id)"><i class="bi bi-pencil"></i></a>
                        <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="@GetDeleteModalId(game)"><i class="bi bi-x-lg"></i></button>
                        <DeleteGame Game="@game"/>
                    </div>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code
{
    private GameSummary[]? games;

    protected override async Task OnInitializedAsync()
    {
        games = await GamesClient.GetGamesAsync();
    }

    private static string GameUrl(int id)
    {
        return $"/editgame/{id}";
    }

    private string GetDeleteModalId(GameSummary game)
    {
        return $"#{DeleteGame.GetModalId(game)}";
    }
}
